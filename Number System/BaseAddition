Given two binary numbers add the two numbers in binary form without converting them to decimal value.
eg) a = 1010 b = 11001
      o/p  100011	            
  b.The two numbers were given in base n 
	eg) a = 123  b = 13  n = 4
	      o/p  202
Code:
#include<stdio.h>
int main()
{
	long long int number1, number2, power10, result;
	int digit1, digit2, carry, sum;
	scanf("%lld%lld", &number1, &number2);
	power10 = 1;
	carry = 0;
	sum = 0;
	result = 0;
	while( number1 / power10 || number2 / power10 )
	{
		digit1 = ( number1 / power10 ) % 10;
		digit2 = ( number2 / power10 ) % 10;
		sum = ( digit1 + digit2 + carry ) % 2;
		carry = ( digit1 + digit2 + carry ) / 2;
		result = sum * power10 + result;
		power10 = power10 * 10;
	}
	result = carry != 0 ? carry * power10 + result : result;
	printf("SUM :  %lld", result);
	return 0;
}

Generalized base addition : 
I/P :
11110
10
2
O/P : ( 11110 + 10 ) base 2 = 100000
Code:
#include<stdio.h>
int main()
{
	long long int number1, number2, result, power10;
	int digit1, digit2, base, sum, carry;
	scanf("%lld%lld%d", &number1, &number2, &base);
	sum = carry = result = 0;
	power10 = 1;
	while( number1 / power10 || number2 / power10 )
	{
		digit1 = ( number1 / power10 ) % 10;
		digit2 = ( number2 / power10 ) % 10;
		sum = ( digit1 + digit2 + carry ) % base;
		carry = ( digit1 + digit2 + carry ) / base;
		result = sum * power10 + result;
		power10 = power10 * 10;
	}
	result = carry != 0 ? carry * power10 + result : result;
	printf("( %lld + %lld ) base %d   =   %lld", number1, number2, base, result);
	return 0;
}
